name: pre-commit
on:
  pull_request:
  push:
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    env:
      RAW_LOG: pre-commit.log
      CS_XML: pre-commit.xml
      SKIP: no-commit-to-branch
      PRE_COMMIT_NO_WRITE: 1
    steps:
      - run: sudo apt-get update && sudo apt-get install cppcheck
        if: false
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        if: false
        with:
          cache: pip
          python-version: 3.12.1
      - run: python -m pip install pre-commit
      # Cache pre-commit for speed
      # Note: PRE_COMMIT_NO_WRITE=1 prevents hooks from writing changes to disk,
      # but pre-commit still reports "files were modified" when hooks would make changes.
      # The Run pre-commit hooks step handles this by checking for actual errors vs. just "files were modified" messages.
      - uses: actions/cache/restore@v4
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit-4|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml', '.pre-commit-config-ci.yaml') }}
      - name: Run pre-commit hooks
        run: |
          set -o pipefail
          # Clean pre-commit cache to remove phantom files
          pre-commit clean
          pre-commit gc
          # Create empty log file with newline to prevent end-of-file-fixer issues
          echo "" > ${RAW_LOG}
          # Run pre-commit on all files in check-only mode
          # Use || true to prevent failure due to "files were modified" messages
          pre-commit run --show-diff-on-failure --color=always --all-files -c .pre-commit-config-ci.yaml | tee -a ${RAW_LOG}
          # Check if there are actual errors (not just formatting issues)
          # If we find "Failed" but not all failures are due to "files were modified", then we have actual errors
          if grep -q "Failed" ${RAW_LOG}; then
            # Count occurrences of "Failed" and "files were modified by this hook"
            FAILED_COUNT=$(grep -c "Failed" ${RAW_LOG})
            MODIFIED_COUNT=$(grep -c "files were modified by this hook" ${RAW_LOG})
            
            # If we have more failures than "files were modified" messages, we have actual errors
            if [ ${FAILED_COUNT} -gt ${MODIFIED_COUNT} ]; then
              echo "::error::Pre-commit found actual issues that need to be fixed"
              exit 1
            fi
          fi
          # If we only have "files were modified" messages but no actual errors, consider it a success
          if grep -q "files were modified by this hook" ${RAW_LOG} && ! grep -q "^[^-].*error:" ${RAW_LOG}; then
            echo "::warning::Pre-commit reported 'files were modified' but no actual errors were found"
          fi
      - name: Convert Raw Log to Checkstyle format (launch action)
        uses: mdeweerd/logToCheckStyle@v2024.3.5
        with:
          in: ${{ env.RAW_LOG }}
          out: ${{ env.CS_XML }}
      - uses: actions/cache/save@v4
        if: ${{ ! cancelled() }}
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit-4|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml', '.pre-commit-config-ci.yaml') }}
      - name: Provide log as artifact
        uses: actions/upload-artifact@v4
        if: ${{ ! cancelled() }}
        with:
          name: precommit-logs
          path: |
            ${{ env.RAW_LOG }}
            ${{ env.CS_XML }}
          retention-days: 2

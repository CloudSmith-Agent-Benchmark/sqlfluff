[INFO][m Initializing environment for https://github.com/pre-commit/pre-commit-hooks.
[INFO][m Initializing environment for https://github.com/psf/black.
[INFO][m Initializing environment for https://github.com/pre-commit/mirrors-mypy.
[INFO][m Initializing environment for https://github.com/pre-commit/mirrors-mypy:types-toml,types-chardet,types-colorama,types-pyyaml,types-regex,types-tqdm,jinja2,pathspec,pytest,click,platformdirs.
[INFO][m Initializing environment for https://github.com/pycqa/flake8.
[INFO][m Initializing environment for https://github.com/pycqa/flake8:flake8-black>=0.3.6.
[INFO][m Initializing environment for https://github.com/pycqa/doc8.
[INFO][m Initializing environment for https://github.com/adrienverge/yamllint.git.
[INFO][m Initializing environment for https://github.com/charliermarsh/ruff-pre-commit.
[INFO][m Initializing environment for https://github.com/codespell-project/codespell.
[INFO][m Initializing environment for https://github.com/codespell-project/codespell:tomli.
[INFO][m Installing environment for https://github.com/pre-commit/pre-commit-hooks.
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
[INFO][m Installing environment for https://github.com/psf/black.
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
[INFO][m Installing environment for https://github.com/pre-commit/mirrors-mypy.
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
[INFO][m Installing environment for https://github.com/pycqa/flake8.
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
[INFO][m Installing environment for https://github.com/pycqa/doc8.
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
[INFO][m Installing environment for https://github.com/adrienverge/yamllint.git.
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
[INFO][m Installing environment for https://github.com/charliermarsh/ruff-pre-commit.
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
[INFO][m Installing environment for https://github.com/codespell-project/codespell.
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
don't commit to branch...................................................[41mFailed[m
[2m- hook id: no-commit-to-branch[m
[2m- files were modified by this hook[m
black....................................................................[41mFailed[m
[2m- hook id: black[m
[2m- files were modified by this hook[m

[1mAll done! ‚ú® üç∞ ‚ú®[0m
[34m388 files [0mwould be left unchanged.

mypy.....................................................................[41mFailed[m
[2m- hook id: mypy[m
[2m- files were modified by this hook[m

Success: no issues found in 247 source files

flake8...................................................................[41mFailed[m
[2m- hook id: flake8[m
[2m- files were modified by this hook[m
doc8.....................................................................[41mFailed[m
[2m- hook id: doc8[m
[2m- files were modified by this hook[m

Scanning...
Validating...
========
Total files scanned = 0
Total files ignored = 43
Total accumulated errors = 0

yamllint.................................................................[41mFailed[m
[2m- hook id: yamllint[m
[2m- exit code: 1[m
[2m- files were modified by this hook[m

[4m.github/workflows/pre-commit.yml[0m
  [2m40:1[0m      [31merror[0m    trailing spaces  [2m(trailing-spaces)[0m
  [2m49:1[0m      [31merror[0m    trailing spaces  [2m(trailing-spaces)[0m

ruff.....................................................................[41mFailed[m
[2m- hook id: ruff[m
[2m- files were modified by this hook[m
codespell................................................................[41mFailed[m
[2m- hook id: codespell[m
[2m- files were modified by this hook[m
pre-commit hook(s) made changes.
If you are seeing this message in CI, reproduce locally with: `pre-commit run --all-files`.
To run `pre-commit` as part of git workflow, use `pre-commit install`.
All changes made by hooks:
[1mdiff --git a/.github/workflows/pre-commit.yml b/.github/workflows/pre-commit.yml[m
[1mindex 9125b7c17..feda443c7 100644[m
[1m--- a/.github/workflows/pre-commit.yml[m
[1m+++ b/.github/workflows/pre-commit.yml[m
[36m@@ -37,8 +37,17 @@[m [mjobs:[m
           # Remove any existing log file and create a new empty one[m
           rm -f ${RAW_LOG}[m
           touch ${RAW_LOG}[m
[32m+[m[41m          [m
[32m+[m[32m          # Temporarily disable exit-on-error to prevent premature script termination[m
[32m+[m[32m          set +e[m
           # Run pre-commit on all files in check-only mode and ensure output is captured[m
           pre-commit run --show-diff-on-failure --color=always --all-files -c .pre-commit-config-ci.yaml | tee ${RAW_LOG}[m
[32m+[m[32m          # Capture the exit code of pre-commit (first command in the pipeline)[m
[32m+[m[32m          PRE_COMMIT_STATUS=${PIPESTATUS[0]}[m
[32m+[m[32m          # Re-enable exit-on-error[m
[32m+[m[32m          set -e[m
[32m+[m[41m          [m
[32m+[m[32m          echo "Pre-commit exited with status: ${PRE_COMMIT_STATUS}"[m
 [m
           # Count the number of failures and "files were modified" messages[m
           FAILED_COUNT=$(grep -c "Failed" ${RAW_LOG} || echo 0)[m
[36m@@ -63,23 +72,30 @@[m [mjobs:[m
             exit 0  # Always succeed on whitespace-fixing branches[m
           fi[m
 [m
[31m-          # Check if there are any failures in the log[m
[31m-          if [ "${FAILED_COUNT}" -gt 0 ]; then[m
[31m-            # If all failures are just "files were modified" messages, consider it a success[m
[31m-            if [ "${FAILED_COUNT}" -eq "${MODIFIED_COUNT}" ]; then[m
[31m-              echo "::warning::Pre-commit reported 'Failed' but these were just 'files were modified' messages"[m
[31m-              exit 0  # Explicitly set success exit code[m
[31m-            # If we have actual errors (failures without "files were modified"), exit with error[m
[31m-            elif [ "${MODIFIED_COUNT}" -eq 0 ]; then[m
[31m-              echo "::error::Pre-commit found actual issues that need to be fixed"[m
[31m-              exit 1[m
[31m-            # If we have a mix of "files were modified" and other failures, check for actual errors[m
[31m-            elif [ "${ERROR_COUNT}" -gt 0 ]; then[m
[31m-              echo "::error::Pre-commit found actual errors that need to be fixed"[m
[31m-              exit 1[m
[32m+[m[32m          # Check if pre-commit failed (non-zero exit code)[m
[32m+[m[32m          if [ "${PRE_COMMIT_STATUS}" -ne 0 ]; then[m
[32m+[m[32m            # Check if there are any failures in the log[m
[32m+[m[32m            if [ "${FAILED_COUNT}" -gt 0 ]; then[m
[32m+[m[32m              # If all failures are just "files were modified" messages, consider it a success[m
[32m+[m[32m              if [ "${FAILED_COUNT}" -eq "${MODIFIED_COUNT}" ]; then[m
[32m+[m[32m                echo "::warning::Pre-commit reported 'Failed' but these were just 'files were modified' messages"[m
[32m+[m[32m                exit 0  # Explicitly set success exit code[m
[32m+[m[32m              # If we have actual errors (failures without "files were modified"), exit with error[m
[32m+[m[32m              elif [ "${MODIFIED_COUNT}" -eq 0 ]; then[m
[32m+[m[32m                echo "::error::Pre-commit found actual issues that need to be fixed"[m
[32m+[m[32m                exit 1[m
[32m+[m[32m              # If we have a mix of "files were modified" and other failures, check for actual errors[m
[32m+[m[32m              elif [ "${ERROR_COUNT}" -gt 0 ]; then[m
[32m+[m[32m                echo "::error::Pre-commit found actual errors that need to be fixed"[m
[32m+[m[32m                exit 1[m
[32m+[m[32m              else[m
[32m+[m[32m                echo "::warning::Pre-commit reported 'files were modified' but no actual errors were found"[m
[32m+[m[32m                exit 0  # Explicitly set success exit code[m
[32m+[m[32m              fi[m
             else[m
[31m-              echo "::warning::Pre-commit reported 'files were modified' but no actual errors were found"[m
[31m-              exit 0  # Explicitly set success exit code[m
[32m+[m[32m              # Pre-commit failed but no failures were found in the log - this is unexpected[m
[32m+[m[32m              echo "::error::Pre-commit failed with exit code ${PRE_COMMIT_STATUS} but no failures were found in the log"[m
[32m+[m[32m              exit ${PRE_COMMIT_STATUS}[m
             fi[m
           fi[m
       - name: Convert Raw Log to Checkstyle format (launch action)[m
[1mdiff --git a/.github/workflows/pre-commit.yml.bak b/.github/workflows/pre-commit.yml.bak[m
[1mindex 00b03c157..6074fdb20 100644[m
[1m--- a/.github/workflows/pre-commit.yml.bak[m
[1m+++ b/.github/workflows/pre-commit.yml.bak[m
[36m@@ -30,18 +30,24 @@[m [mjobs:[m
           key: pre-commit-4|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml', '.pre-commit-config-ci.yaml') }}[m
       - name: Run pre-commit hooks[m
         run: |[m
[32m+[m[32m          set -o pipefail[m
           # Clean pre-commit cache to remove phantom files[m
           pre-commit clean[m
           pre-commit gc[m
           # Remove any existing log file and create a new empty one[m
           rm -f ${RAW_LOG}[m
           touch ${RAW_LOG}[m
[32m+[m[41m          [m
[32m+[m[32m          # Temporarily disable exit-on-error to prevent premature script termination[m
[32m+[m[32m          set +e[m
           # Run pre-commit on all files in check-only mode and ensure output is captured[m
[31m-          # Note: We intentionally don't use 'set -o pipefail' here to allow the script to continue[m
[31m-          # even if pre-commit returns a non-zero exit code, as we handle that later[m
           pre-commit run --show-diff-on-failure --color=always --all-files -c .pre-commit-config-ci.yaml | tee ${RAW_LOG}[m
[31m-          # Store the pre-commit exit code to check later[m
[31m-          PRE_COMMIT_EXIT_CODE=${PIPESTATUS[0]}[m
[32m+[m[32m          # Capture the exit code of pre-commit (first command in the pipeline)[m
[32m+[m[32m          PRE_COMMIT_STATUS=${PIPESTATUS[0]}[m
[32m+[m[32m          # Re-enable exit-on-error[m
[32m+[m[32m          set -e[m
[32m+[m[41m          [m
[32m+[m[32m          echo "Pre-commit exited with status: ${PRE_COMMIT_STATUS}"[m
 [m
           # Count the number of failures and "files were modified" messages[m
           FAILED_COUNT=$(grep -c "Failed" ${RAW_LOG} || echo 0)[m
[36m@@ -67,9 +73,9 @@[m [mjobs:[m
           fi[m
 [m
           # Check if there are any failures in the log[m
[31m-          if [ "${FAILED_COUNT}" -gt 0 ] || [ "${PRE_COMMIT_EXIT_CODE}" -ne 0 ]; then[m
[32m+[m[32m          if [ "${FAILED_COUNT}" -gt 0 ]; then[m
             # If all failures are just "files were modified" messages, consider it a success[m
[31m-            if [ "${FAILED_COUNT}" -eq "${MODIFIED_COUNT}" ] && [ "${FAILED_COUNT}" -gt 0 ]; then[m
[32m+[m[32m            if [ "${FAILED_COUNT}" -eq "${MODIFIED_COUNT}" ]; then[m
               echo "::warning::Pre-commit reported 'Failed' but these were just 'files were modified' messages"[m
               exit 0  # Explicitly set success exit code[m
             # If we have actual errors (failures without "files were modified"), exit with error[m
[1mdiff --git a/pre-commit.log b/pre-commit.log[m
[1mindex 345e6aef7..f7cdd147f 100644[m
[1m--- a/pre-commit.log[m
[1m+++ b/pre-commit.log[m
[36m@@ -1 +1,84 @@[m
[31m-Test[m
[32m+[m[32m[INFO][m Initializing environment for https://github.com/pre-commit/pre-commit-hooks.[m
[32m+[m[32m[INFO][m Initializing environment for https://github.com/psf/black.[m
[32m+[m[32m[INFO][m Initializing environment for https://github.com/pre-commit/mirrors-mypy.[m
[32m+[m[32m[INFO][m Initializing environment for https://github.com/pre-commit/mirrors-mypy:types-toml,types-chardet,types-colorama,types-pyyaml,types-regex,types-tqdm,jinja2,pathspec,pytest,click,platformdirs.[m
[32m+[m[32m[INFO][m Initializing environment for https://github.com/pycqa/flake8.[m
[32m+[m[32m[INFO][m Initializing environment for https://github.com/pycqa/flake8:flake8-black>=0.3.6.[m
[32m+[m[32m[INFO][m Initializing environment for https://github.com/pycqa/doc8.[m
[32m+[m[32m[INFO][m Initializing environment for https://github.com/adrienverge/yamllint.git.[m
[32m+[m[32m[INFO][m Initializing environment for https://github.com/charliermarsh/ruff-pre-commit.[m
[32m+[m[32m[INFO][m Initializing environment for https://github.com/codespell-project/codespell.[m
[32m+[m[32m[INFO][m Initializing environment for https://github.com/codespell-project/codespell:tomli.[m
[32m+[m[32m[INFO][m Installing environment for https://github.com/pre-commit/pre-commit-hooks.[m
[32m+[m[32m[INFO][m Once installed this environment will be reused.[m
[32m+[m[32m[INFO][m This may take a few minutes...[m
[32m+[m[32m[INFO][m Installing environment for https://github.com/psf/black.[m
[32m+[m[32m[INFO][m Once installed this environment will be reused.[m
[32m+[m[32m[INFO][m This may take a few minutes...[m
[32m+[m[32m[INFO][m Installing environment for https://github.com/pre-commit/mirrors-mypy.[m
[32m+[m[32m[INFO][m Once installed this environment will be reused.[m
[32m+[m[32m[INFO][m This may take a few minutes...[m
[32m+[m[32m[INFO][m Installing environment for https://github.com/pycqa/flake8.[m
[32m+[m[32m[INFO][m Once installed this environment will be reused.[m
[32m+[m[32m[INFO][m This may take a few minutes...[m
[32m+[m[32m[INFO][m Installing environment for https://github.com/pycqa/doc8.[m
[32m+[m[32m[INFO][m Once installed this environment will be reused.[m
[32m+[m[32m[INFO][m This may take a few minutes...[m
[32m+[m[32m[INFO][m Installing environment for https://github.com/adrienverge/yamllint.git.[m
[32m+[m[32m[INFO][m Once installed this environment will be reused.[m
[32m+[m[32m[INFO][m This may take a few minutes...[m
[32m+[m[32m[INFO][m Installing environment for https://github.com/charliermarsh/ruff-pre-commit.[m
[32m+[m[32m[INFO][m Once installed this environment will be reused.[m
[32m+[m[32m[INFO][m This may take a few minutes...[m
[32m+[m[32m[INFO][m Installing environment for https://github.com/codespell-project/codespell.[m
[32m+[m[32m[INFO][m Once installed this environment will be reused.[m
[32m+[m[32m[INFO][m This may take a few minutes...[m
[32m+[m[32mdon't commit to branch...................................................[41mFailed[m[m
[32m+[m[32m[2m- hook id: no-commit-to-branch[m[m
[32m+[m[32m[2m- files were modified by this hook[m[m
[32m+[m[32mblack....................................................................[41mFailed[m[m
[32m+[m[32m[2m- hook id: black[m[m
[32m+[m[32m[2m- files were modified by this hook[m[m
[32m+[m
[32m+[m[32m[1mAll done! ‚ú® üç∞ ‚ú®[0m[m
[32m+[m[32m[34m388 files [0mwould be left unchanged.[m
[32m+[m
[32m+[m[32mmypy.....................................................................[41mFailed[m[m
[32m+[m[32m[2m- hook id: mypy[m[m
[32m+[m[32m[2m- files were modified by this hook[m[m
[32m+[m
[32m+[m[32mSuccess: no issues found in 247 source files[m
[32m+[m
[32m+[m[32mflake8...................................................................[41mFailed[m[m
[32m+[m[32m[2m- hook id: flake8[m[m
[32m+[m[32m[2m- files were modified by this hook[m[m
[32m+[m[32mdoc8.....................................................................[41mFailed[m[m
[32m+[m[32m[2m- hook id: doc8[m[m
[32m+[m[32m[2m- files were modified by this hook[m[m
[32m+[m
[32m+[m[32mScanning...[m
[32m+[m[32mValidating...[m
[32m+[m[32m========[m
[32m+[m[32mTotal files scanned = 0[m
[32m+[m[32mTotal files ignored = 43[m
[32m+[m[32mTotal accumulated errors = 0[m
[32m+[m
[32m+[m[32myamllint.................................................................[41mFailed[m[m
[32m+[m[32m[2m- hook id: yamllint[m[m
[32m+[m[32m[2m- exit code: 1[m[m
[32m+[m[32m[2m- files were modified by this hook[m[m
[32m+[m
[32m+[m[32m[4m.github/workflows/pre-commit.yml[0m[m
[32m+[m[32m  [2m40:1[0m      [31merror[0m    trailing spaces  [2m(trailing-spaces)[0m[m
[32m+[m[32m  [2m49:1[0m      [31merror[0m    trailing spaces  [2m(trailing-spaces)[0m[m
[32m+[m
[32m+[m[32mruff.....................................................................[41mFailed[m[m
[32m+[m[32m[2m- hook id: ruff[m[m
[32m+[m[32m[2m- files were modified by this hook[m[m
[32m+[m[32mcodespell................................................................[41mFailed[m[m
[32m+[m[32m[2m- hook id: codespell[m[m
[32m+[m[32m[2m- files were modified by this hook[m[m
[32m+[m[32mpre-commit hook(s) made changes.[m
[32m+[m[32mIf you are seeing this message in CI, reproduce locally with: `pre-commit run --all-files`.[m
[32m+[m[32mTo run `pre-commit` as part of git workflow, use `pre-commit install`.[m
[32m+[m[32mAll changes made by hooks:[m
